<tv:Popup
    x:Class="SecureFolderFS.Maui.Popups.CredentialsPopup"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:l="using:SecureFolderFS.Maui.Localization"
    xmlns:mdc="clr-namespace:Material.Components.Maui;assembly=Material.Components.Maui"
    xmlns:ts="clr-namespace:SecureFolderFS.Maui.TemplateSelectors"
    xmlns:tv="clr-namespace:CommunityToolkit.Maui.Views;assembly=CommunityToolkit.Maui"
    xmlns:uc="clr-namespace:SecureFolderFS.Maui.UserControls"
    xmlns:uco="clr-namespace:SecureFolderFS.Maui.UserControls.Options"
    xmlns:vc="clr-namespace:SecureFolderFS.Maui.ValueConverters"
    xmlns:vm="clr-namespace:SecureFolderFS.Sdk.ViewModels.Controls;assembly=SecureFolderFS.Sdk"
    xmlns:vm2="clr-namespace:SecureFolderFS.Sdk.ViewModels.Controls.Authentication;assembly=SecureFolderFS.Sdk"
    xmlns:vm3="clr-namespace:SecureFolderFS.Sdk.ViewModels.Views.Credentials;assembly=SecureFolderFS.Sdk"
    x:Name="ThisPopup"
    BindingContext="{x:Reference ThisPopup}"
    Color="{AppThemeBinding Light={StaticResource BackgroundFillPrimaryLightColor},
                            Dark={StaticResource BackgroundFillPrimaryDarkColor}}">

    <tv:Popup.Resources>
        <vc:BoolInvertConverter x:Key="BoolInvertConverter" />

        <!--  Alternative Stage: Resetting credentials with Recovery Key  -->
        <DataTemplate x:Key="ResetTemplate" x:DataType="vm3:CredentialsResetViewModel">
            <VerticalStackLayout Spacing="24">
                <Picker
                    HorizontalOptions="Center"
                    HorizontalTextAlignment="Center"
                    ItemDisplayBinding="{Binding Title, Mode=OneWay, x:DataType={x:Type vm2:AuthenticationViewModel}}"
                    ItemsSource="{Binding AuthenticationOptions}"
                    SelectedItem="{Binding RegisterViewModel.CurrentViewModel, Mode=TwoWay}"
                    WidthRequest="200" />

                <uc:RegisterControl CurrentViewModel="{Binding RegisterViewModel.CurrentViewModel, Mode=OneWay}" HorizontalOptions="Fill" />

                <OnPlatform x:TypeArguments="View">
                    <On Platform="iOS">
                        <Button
                            Clicked="ResetViewButton_Click"
                            HorizontalOptions="Fill"
                            IsEnabled="{Binding ViewModel.PrimaryButtonEnabled, Mode=OneWay, Source={x:Reference ThisPopup}}"
                            Text="{Binding ViewModel.PrimaryButtonText, Mode=OneWay, Source={x:Reference ThisPopup}}" />
                    </On>
                    <On Platform="Android">
                        <mdc:Button
                            Clicked="ResetViewButton_Click"
                            HorizontalOptions="Fill"
                            IsEnabled="{Binding ViewModel.CanContinue, Mode=OneWay, Source={x:Reference ThisPopup}}"
                            Text="{Binding ViewModel.PrimaryButtonText, Mode=OneWay, Source={x:Reference ThisPopup}}" />
                    </On>
                </OnPlatform>
            </VerticalStackLayout>
        </DataTemplate>

        <!--  1st Stage: Login  -->
        <DataTemplate x:Key="LoginTemplate" x:DataType="vm:LoginViewModel">
            <VerticalStackLayout Spacing="4">
                <uc:LoginControl CurrentViewModel="{Binding CurrentViewModel, Mode=OneWay}" ProvideContinuationButton="True" />
                <Button
                    Command="{Binding RecoverAccessCommand}"
                    Style="{StaticResource TransparentButtonStyle}"
                    Text="{l:ResourceString Rid=RecoverAccess}" />
            </VerticalStackLayout>
        </DataTemplate>

        <!--  2nd Stage: Option selection  -->
        <DataTemplate x:Key="SelectionTemplate" x:DataType="vm3:CredentialsSelectionViewModel">
            <VerticalStackLayout Loaded="AvailableOptionsPanel_Loaded" Spacing="16">

                <!--  "Modify Existing" section added in code-behind, if necessary  -->

                <!--  All Options (populated in code-behind)  -->
                <uco:OptionsContainer Title="{l:ResourceString Rid=AllOptions}">
                    <uco:OptionsContainer.InnerContent>
                        <VerticalStackLayout />
                    </uco:OptionsContainer.InnerContent>
                </uco:OptionsContainer>
            </VerticalStackLayout>
        </DataTemplate>

        <!--  3rd Stage: Confirmation  -->
        <DataTemplate x:Key="ConfirmationTemplate" x:DataType="vm3:CredentialsConfirmationViewModel">
            <VerticalStackLayout Spacing="16">
                <Grid>
                    <!--  Confirmation Panel  -->
                    <VerticalStackLayout IsVisible="{Binding IsRemoving, Mode=OneWay, Converter={StaticResource BoolInvertConverter}}" Spacing="16">
                        <uc:RegisterControl CurrentViewModel="{Binding RegisterViewModel.CurrentViewModel, Mode=OneWay}" />
                        <Label Text="{l:ResourceString Rid=RecoveryKeyTip}" />
                    </VerticalStackLayout>

                    <!--  Removal Panel  -->
                    <VerticalStackLayout IsVisible="{Binding IsRemoving, Mode=OneWay}" Spacing="16">
                        <Label Text="{l:ResourceString Rid=RemoveAuthenticationQuestion}" />
                        <VerticalStackLayout Spacing="8">
                            <Label
                                FontAttributes="Bold"
                                FontSize="24"
                                Text="{Binding ConfiguredViewModel.Title, Mode=OneWay}" />
                            <Label Text="{Binding ConfiguredViewModel.Description, Mode=OneWay}" />
                        </VerticalStackLayout>
                    </VerticalStackLayout>
                </Grid>
                <Button
                    Clicked="ConfirmationViewButton_Click"
                    HorizontalOptions="Fill"
                    IsEnabled="{Binding ViewModel.PrimaryButtonEnabled, Mode=OneWay, Source={x:Reference ThisPopup}}"
                    Style="{StaticResource AccentButtonStyle}"
                    Text="{Binding ViewModel.PrimaryButtonText, Mode=OneWay, Source={x:Reference ThisPopup}}" />
            </VerticalStackLayout>
        </DataTemplate>
    </tv:Popup.Resources>

    <Grid
        Padding="16"
        RowSpacing="24"
        WidthRequest="392">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Label
            Grid.Row="0"
            FontAttributes="Bold"
            FontSize="24"
            Text="{Binding ViewModel.Title, Mode=OneWay}" />

        <uc:ContentPresentation
            Grid.Row="1"
            Presentation="{Binding ViewModel.SelectedViewModel, Mode=OneWay}"
            VerticalOptions="Center">
            <uc:ContentPresentation.TemplateSelector>
                <ts:CredentialsTemplateSelector
                    ConfirmationTemplate="{StaticResource ConfirmationTemplate}"
                    LoginTemplate="{StaticResource LoginTemplate}"
                    ResetTemplate="{StaticResource ResetTemplate}"
                    SelectionTemplate="{StaticResource SelectionTemplate}" />
            </uc:ContentPresentation.TemplateSelector>
        </uc:ContentPresentation>
    </Grid>
</tv:Popup>
