<UserControl
    x:Class="SecureFolderFS.Uno.UserControls.Widgets.HealthWidget"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="using:SecureFolderFS.Uno.Localization"
    xmlns:local="using:SecureFolderFS.Uno.UserControls.Widgets"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:not_win="http://uno.ui/not_win"
    xmlns:vc="using:SecureFolderFS.Uno.ValueConverters"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    x:Name="HealthControl"
    mc:Ignorable="d not_win">

    <UserControl.Resources>
        <vc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <vc:ProgressIsDeterminateConverter x:Key="ProgressIsDeterminateConverter" />
        <vc:SeverityHealthIconConverter x:Key="SeverityHealthIconConverter" />

        <DataTemplate x:Key="WithDetailedHealthTemplate" x:DataType="local:HealthWidget">
            <StackPanel Margin="0,-4,0,0" DataContext="{Binding ElementName=HealthControl}">
                <!--  Vault status  -->
                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontWeight="Medium"
                    Text="{Binding Path=StatusTitle, Mode=OneWay}"
                    TextTrimming="CharacterEllipsis" />

                <!--  Subtitle  -->
                <Grid>
                    <!--  Last checked  -->
                    <TextBlock
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Opacity="0.6"
                        Text="{Binding Path=LastCheckedText, Mode=OneWay, FallbackValue='Last checked: Unspecified'}"
                        TextTrimming="CharacterEllipsis"
                        Visibility="{Binding Path=IsProgressing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='invert'}" />

                    <!--  Progress  -->
                    <ProgressBar
                        Margin="0,8,0,0"
                        VerticalAlignment="Center"
                        IsIndeterminate="{Binding Path=CurrentProgress, Mode=OneWay, Converter={StaticResource ProgressIsDeterminateConverter}}"
                        Visibility="{Binding Path=IsProgressing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                        Value="{Binding Path=CurrentProgress, Mode=OneWay}" />
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="WithoutDetailedHealthTemplate" x:DataType="local:HealthWidget">
            <Grid />
        </DataTemplate>
    </UserControl.Resources>

    <Grid ColumnSpacing="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!--  Icon  -->
        <Grid Grid.Column="0" Margin="-8,0,0,0">
            <win:Image
                Width="64"
                Height="64"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Source="{x:Bind Severity, Mode=OneWay, Converter={StaticResource SeverityHealthIconConverter}}"
                Stretch="UniformToFill" />
            <not_win:Image
                Width="64"
                Height="64"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Source="{x:Bind Severity, Mode=OneWay, Converter={StaticResource SeverityHealthIconConverter}}"
                Stretch="UniformToFill" />
        </Grid>

        <!--  Health status  -->
        <ContentPresenter
            x:Name="DetailedHealthContentPresenter"
            Grid.Column="1"
            VerticalContentAlignment="Center"
            Canvas.ZIndex="1" />

        <!--  Options  -->
        <Grid Grid.Column="2">

            <!--  Start scanning  -->
            <StackPanel
                Margin="0,-6,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                Spacing="4"
                Visibility="{x:Bind IsProgressing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='invert'}">
                <Button
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    VerticalContentAlignment="Center"
                    Command="{x:Bind StartScanningCommand, Mode=OneWay}"
                    Content="Start scanning"
                    IsEnabled="True" />
                <Button
                    Width="36"
                    Height="35"
                    Padding="0"
                    HorizontalAlignment="Center"
                    Command="{x:Bind OpenVaultHealthCommand, Mode=OneWay}"
                    IsEnabled="True"
                    ToolTipService.ToolTip="Go to Vault Health">
                    <FontIcon FontSize="15" Glyph="&#xE76C;" />
                </Button>
            </StackPanel>

            <!--  Cancel  -->
            <Button
                VerticalAlignment="Center"
                Command="{x:Bind CancelCommand, Mode=OneWay}"
                Content="{l:ResourceString Rid=Cancel}"
                Visibility="{x:Bind IsProgressing, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!--  Default window  -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="350" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DetailedHealthContentPresenter.ContentTemplate" Value="{StaticResource WithDetailedHealthTemplate}" />
                    </VisualState.Setters>
                </VisualState>
                <!--  Small window  -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DetailedHealthContentPresenter.ContentTemplate" Value="{StaticResource WithoutDetailedHealthTemplate}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
