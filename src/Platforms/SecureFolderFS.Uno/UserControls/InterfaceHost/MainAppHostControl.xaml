<UserControl
    x:Class="SecureFolderFS.Uno.UserControls.InterfaceHost.MainAppHostControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:anim="using:CommunityToolkit.WinUI.Animations"
    xmlns:animvis="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="using:SecureFolderFS.Uno.Localization"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc2="using:SecureFolderFS.Uno.UserControls.Navigation"
    xmlns:vc="using:SecureFolderFS.Uno.ValueConverters"
    xmlns:vm="using:SecureFolderFS.Sdk.ViewModels.Controls.VaultList"
    xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    Loaded="MainAppHostControl_Loaded"
    mc:Ignorable="d">

    <UserControl.Resources>
        <vc:BoolInvertConverter x:Key="BoolInvertConverter" />
        <vc:BoolToStringConverter x:Key="BoolToStringConverter" />
        <vc:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <vc:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
        <vc:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
        <vc:IconSourceConverter x:Key="IconSourceConverter" />
    </UserControl.Resources>

    <NavigationView
        x:Name="Sidebar"
        AllowDrop="True"
        DisplayModeChanged="Sidebar_DisplayModeChanged"
        DragOver="Sidebar_DragOver"
        Drop="Sidebar_Drop"
        ExpandedModeThresholdWidth="816"
        IsBackButtonVisible="Collapsed"
        IsPaneToggleButtonVisible="True"
        IsSettingsVisible="False"
        MenuItemsSource="{x:Bind ViewModel.VaultListViewModel.Items, Mode=OneWay}"
        OpenPaneLength="260"
        PaneClosed="Sidebar_PaneClosed"
        PaneTitle="{x:Bind Sidebar.IsPaneOpen, Mode=OneWay, Converter={StaticResource BoolToStringConverter}, ConverterParameter='false:STANDARD|:true:LOCALIZE|MyVaults'}"
        SelectedItem="{x:Bind ViewModel.VaultListViewModel.SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        SelectionChanged="Sidebar_SelectionChanged">

        <Grid>
            <Grid
                Width="32"
                HorizontalAlignment="Left"
                Background="Transparent"
                Canvas.ZIndex="10"
                PointerEntered="PaneButtonGrid_PointerEntered"
                PointerExited="PaneButtonGrid_PointerExited">

                <!--  Pane Show button  -->
                <Button
                    x:Name="PaneShowButton"
                    Height="128"
                    Margin="-16,0,0,0"
                    Click="PaneShowButton_Click"
                    CornerRadius="0 6 6 0"
                    Visibility="Collapsed">

                    <anim:Implicit.ShowAnimations>
                        <anim:TranslationAnimation
                            EasingMode="EaseOut"
                            From="-8,0,0"
                            To="0"
                            Duration="0:0:0.4" />
                    </anim:Implicit.ShowAnimations>
                    <anim:Implicit.HideAnimations>
                        <anim:TranslationAnimation
                            EasingMode="EaseOut"
                            From="0"
                            To="-8,0,0"
                            Duration="0:0:0.6" />
                    </anim:Implicit.HideAnimations>
                </Button>
            </Grid>

            <!--  Navigation Control  -->
            <uc2:VaultNavigationControl x:Name="Navigation" />
        </Grid>

        <NavigationView.AutoSuggestBox>
            <AutoSuggestBox
                ItemsSource="{x:Bind ViewModel.VaultListViewModel.SearchViewModel.SearchItems, Mode=OneWay}"
                PlaceholderText="{l:ResourceString Rid=Search}"
                QueryIcon="Find"
                QuerySubmitted="SidebarSearchBox_QuerySubmitted"
                TextChanged="SidebarSearchBox_TextChanged" />
        </NavigationView.AutoSuggestBox>
        <NavigationView.PaneFooter>
            <Grid
                Padding="20,0,20,12"
                HorizontalAlignment="Stretch"
                RowSpacing="16">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Button
                    x:Name="StandardAddVaultButton"
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    AutomationProperties.Name="{l:ResourceString Rid=NewVault}"
                    Command="{x:Bind ViewModel.VaultListViewModel.AddNewVaultCommand, Mode=OneWay}"
                    Style="{ThemeResource AccentButtonStyle}"
                    Visibility="{x:Bind Sidebar.IsPaneOpen, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal" Spacing="8">
                        <FontIcon
                            Margin="2,0,2,-4"
                            FontSize="16"
                            Glyph="&#xECC8;" />
                        <TextBlock Text="{l:ResourceString Rid=NewVault}" />
                    </StackPanel>
                </Button>

                <!--  TODO(uno): #18589  -->
                <Button
                    x:Name="CompactAddVaultButton"
                    Grid.Column="0"
                    Width="36"
                    Height="36"
                    Margin="-16,16,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    AutomationProperties.Name="{l:ResourceString Rid=NewVault}"
                    Command="{x:Bind ViewModel.VaultListViewModel.AddNewVaultCommand, Mode=OneWay}"
                    Style="{ThemeResource AccentButtonStyle}"
                    Visibility="{x:Bind Sidebar.IsPaneOpen, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='invert'}">
                    <FontIcon FontSize="16" Glyph="&#xECC8;" />
                </Button>

                <Button
                    Grid.Column="1"
                    Width="36"
                    Height="36"
                    Padding="8"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    AutomationProperties.Name="{l:ResourceString Rid=Settings}"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{x:Bind ViewModel.OpenSettingsCommand, Mode=OneWay}"
                    Visibility="{x:Bind Sidebar.IsPaneOpen, Mode=OneWay}">
                    <AnimatedIcon>
                        <AnimatedIcon.Source>
                            <animvis:AnimatedSettingsVisualSource />
                        </AnimatedIcon.Source>
                        <AnimatedIcon.FallbackIconSource>
                            <SymbolIconSource Symbol="Setting" />
                        </AnimatedIcon.FallbackIconSource>
                    </AnimatedIcon>
                </Button>

                <win:TeachingTip
                    x:Name="BetaTeachingTip"
                    Grid.Column="0"
                    MaxWidth="100"
                    x:FieldModifier="public"
                    CloseButtonClick="TeachingTip_CloseButtonClick"
                    PreferredPlacement="Top"
                    Subtitle="Adding more than two vaults is free during the beta period"
                    Target="{Binding ElementName=StandardAddVaultButton}">
                    <TeachingTip.IconSource>
                        <FontIconSource Glyph="&#xE946;" />
                    </TeachingTip.IconSource>
                </win:TeachingTip>
            </Grid>
        </NavigationView.PaneFooter>
        <NavigationView.MenuItemTemplate>
            <DataTemplate x:DataType="vm:VaultListItemViewModel">
                <NavigationViewItem
                    Height="64"
                    AutomationProperties.Name="{x:Bind VaultViewModel.VaultModel.VaultName, Mode=OneWay}"
                    DoubleTapped="NavigationItem_DoubleTapped"
                    IsDoubleTapEnabled="True"
                    ToolTipService.ToolTip="{x:Bind VaultViewModel.VaultModel.VaultName, Mode=OneWay}">
                    <NavigationViewItem.Icon>
                        <IconSourceElement IconSource="{x:Bind CustomIcon, Mode=OneWay, Converter={StaticResource IconSourceConverter}, ConverterParameter='&#xF540;'}" />
                    </NavigationViewItem.Icon>
                    <NavigationViewItem.Content>
                        <Grid DataContext="{x:Bind}">
                            <StackPanel Visibility="{x:Bind IsRenaming, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='invert'}">
                                <StackPanel.ChildrenTransitions>
                                    <TransitionCollection>
                                        <RepositionThemeTransition />
                                    </TransitionCollection>
                                </StackPanel.ChildrenTransitions>

                                <!--  Vault name  -->
                                <TextBlock
                                    FontWeight="SemiBold"
                                    Text="{x:Bind VaultViewModel.VaultName, Mode=OneWay}"
                                    TextTrimming="CharacterEllipsis" />

                                <!--  Last opened  -->
                                <TextBlock
                                    x:Name="LastOpenedText"
                                    FontSize="12"
                                    Opacity="0.6"
                                    Text="{x:Bind VaultViewModel.LastAccessDate, Mode=OneWay, Converter={StaticResource DateTimeToStringConverter}}"
                                    Visibility="{x:Bind VaultViewModel.LastAccessDate, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" />
                            </StackPanel>
                            <TextBox
                                x:Name="RenameBox"
                                VerticalAlignment="Center"
                                x:Load="{x:Bind IsRenaming, Mode=OneWay}"
                                KeyDown="RenameBox_KeyDown"
                                Loaded="RenameBox_Loaded"
                                LostFocus="RenameBox_LostFocus"
                                Text="{x:Bind VaultViewModel.VaultName, Mode=OneWay}" />
                        </Grid>
                    </NavigationViewItem.Content>
                    <NavigationViewItem.ContextFlyout>
                        <MenuFlyout x:Name="ItemFlyout">
                            <!--  Show in Explorer  -->
                            <MenuFlyoutItem Command="{x:Bind RevealFolderCommand, Mode=OneWay}" Text="{l:ResourceString Rid=ShowEncryptedVault}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xED25;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <!--  Rename  -->
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem
                                Click="Rename_Click"
                                DataContext="{x:Bind}"
                                Text="{l:ResourceString Rid=Rename}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE8AC;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <!--  Change icon  -->
                            <MenuFlyoutItem
                                Command="{x:Bind CustomizeCommand, Mode=OneWay}"
                                CommandParameter="Icon"
                                Text="Change icon">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE70F;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <!--  Move up/down  -->
                            <MenuFlyoutSeparator Visibility="{x:Bind CanMove, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                            <MenuFlyoutItem
                                x:Name="MoveUp"
                                Command="{x:Bind MoveItemCommand, Mode=OneWay}"
                                CommandParameter="up"
                                Text="{l:ResourceString Rid=MoveUp}"
                                Visibility="{x:Bind CanMoveUp, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE70E;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem
                                x:Name="MoveDown"
                                Command="{x:Bind MoveItemCommand, Mode=OneWay}"
                                CommandParameter="down"
                                Text="{l:ResourceString Rid=MoveDown}"
                                Visibility="{x:Bind CanMoveDown, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE70D;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <!--  Lock  -->
                            <MenuFlyoutSeparator />
                            <MenuFlyoutItem
                                Command="{x:Bind RequestLockCommand, Mode=OneWay}"
                                Text="{l:ResourceString Rid=LockVault}"
                                Visibility="{x:Bind IsUnlocked, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE72E;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>

                            <!--  Remove  -->
                            <MenuFlyoutItem
                                Command="{x:Bind RemoveVaultCommand, Mode=OneWay}"
                                IsEnabled="{x:Bind IsUnlocked, Mode=OneWay, Converter={StaticResource BoolInvertConverter}}"
                                Text="{l:ResourceString Rid=RemoveFromList}">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE738;" />
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>
                    </NavigationViewItem.ContextFlyout>
                </NavigationViewItem>
            </DataTemplate>
        </NavigationView.MenuItemTemplate>
    </NavigationView>
</UserControl>
